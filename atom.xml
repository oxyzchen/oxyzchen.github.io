<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Oxyzchen&#39;s Blog</title>
  
  
  <link href="https://oxyzchen.github.io/atom.xml" rel="self"/>
  
  <link href="https://oxyzchen.github.io/"/>
  <updated>2022-03-10T17:23:07.000Z</updated>
  <id>https://oxyzchen.github.io/</id>
  
  <author>
    <name>Oxyzchen</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>在CentOS上安装PostgreSQL并配置扩展</title>
    <link href="https://oxyzchen.github.io/2022/03/11/%E5%9C%A8CentOS%E4%B8%8A%E5%AE%89%E8%A3%85PostgreSQL%E5%B9%B6%E9%85%8D%E7%BD%AE%E6%89%A9%E5%B1%95/"/>
    <id>https://oxyzchen.github.io/2022/03/11/%E5%9C%A8CentOS%E4%B8%8A%E5%AE%89%E8%A3%85PostgreSQL%E5%B9%B6%E9%85%8D%E7%BD%AE%E6%89%A9%E5%B1%95/</id>
    <published>2022-03-10T17:02:15.000Z</published>
    <updated>2022-03-10T17:23:07.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="PostgreSQL"><a href="#PostgreSQL" class="headerlink" title="PostgreSQL"></a>PostgreSQL</h1><h2 id="选择安装版本"><a href="#选择安装版本" class="headerlink" title="选择安装版本"></a>选择安装版本</h2><p>咱的服务器系统是centos7.9</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># cat /etc/centos-release</span><br><span class="line">CentOS Linux release 7.9.2009 (Core)</span><br></pre></td></tr></table></figure><p>官网的安装命令：<a href="https://www.postgresql.org/download/linux/redhat/">PostgreSQL: Linux downloads (Red Hat family)</a></p><p>选择好版本</p><img src="/2022/03/11/%E5%9C%A8CentOS%E4%B8%8A%E5%AE%89%E8%A3%85PostgreSQL%E5%B9%B6%E9%85%8D%E7%BD%AE%E6%89%A9%E5%B1%95/image-20220310220005589.png" class="" title="image-20220310220005589"><p>把安装命令复制，执行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># Install the repository RPM:</span><br><span class="line">sudo yum install -y https://download.postgresql.org/pub/repos/yum/reporpms/EL-7-x86_64/pgdg-redhat-repo-latest.noarch.rpm</span><br><span class="line"></span><br><span class="line"># Install PostgreSQL:</span><br><span class="line">sudo yum install -y postgresql14-server</span><br><span class="line"></span><br><span class="line"># Optionally initialize the database and enable automatic start:</span><br><span class="line">#命令依次是 数据集初始化、开机自启、启动服务</span><br><span class="line">sudo /usr/pgsql-14/bin/postgresql-14-setup initdb</span><br><span class="line">sudo systemctl enable postgresql-14</span><br><span class="line">sudo systemctl start postgresql-14</span><br></pre></td></tr></table></figure><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>通过以上步骤，自带了一个postgres管理员用户</p><p>su postgres 切换到此用户，psql登录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># su postgres</span></span><br><span class="line">bash-4.2$ psql</span><br><span class="line">psql (14.2)</span><br><span class="line">Type <span class="string">&quot;help&quot;</span> <span class="keyword">for</span> <span class="built_in">help</span>.</span><br><span class="line">postgres=<span class="comment"># </span></span><br></pre></td></tr></table></figure><p>配置文件路径</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /var/lib/pgsql/14/data</span><br></pre></td></tr></table></figure><h3 id="修改监听IP和端口"><a href="#修改监听IP和端口" class="headerlink" title="修改监听IP和端口"></a>修改监听IP和端口</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi postgresql.conf</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">第60行，注意去掉开头的#</span><br><span class="line">listen_addresses = &#x27;*&#x27;          # what IP address(es) to listen on;</span><br></pre></td></tr></table></figure><h3 id="修改连接权限"><a href="#修改连接权限" class="headerlink" title="修改连接权限"></a>修改连接权限</h3><p><code>pg_hba.conf</code>最后面的</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># TYPE  DATABASE        USER            ADDRESS                 METHOD</span><br><span class="line"></span><br><span class="line"># &quot;local&quot; is for Unix domain socket connections only</span><br><span class="line">local   all             all                                     peer</span><br><span class="line"># IPv4 local connections:</span><br><span class="line">host    all             all             0.0.0.0/0            scram-sha-256</span><br><span class="line"># IPv6 local connections:</span><br><span class="line">host    all             all             ::1/128                 scram-sha-256</span><br><span class="line"># Allow replication connections from localhost, by a user with the</span><br><span class="line"># replication privilege.</span><br><span class="line">local   replication     all                                     peer</span><br><span class="line">host    replication     all             127.0.0.1/32            scram-sha-256</span><br><span class="line">host    replication     all             ::1/128                 scram-sha-256</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这里咱修改了IPv4的连接， 改成了0.0.0.0&#x2F;0，允许远程访问。当然，服务器也要开放5432端口。</p><blockquote><p>method是认证方式，9.2的默认是ident，通过登录账户的用户名匹配，需要改成md5或者scram-sha-256</p></blockquote><p>重启服务</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service postgresql-14 restart</span><br></pre></td></tr></table></figure><p>参考：</p><blockquote><p><a href="https://blog.csdn.net/weixin_33851177/article/details/89732870">(5条消息) PostgreSQL远程连接配置管理&#x2F;账号密码分配（解决：致命错误: 用户 “postgres” Ident 认证失败）…_weixin_33851177的博客-CSDN博客</a><br><a href="http://www.ruanyifeng.com/blog/2013/12/getting_started_with_postgresql.html">PostgreSQL新手入门 - 阮一峰的网络日志 (ruanyifeng.com)</a></p></blockquote><h2 id="使用GUI远程登录"><a href="#使用GUI远程登录" class="headerlink" title="使用GUI远程登录"></a>使用GUI远程登录</h2><p>因为咱是在服务器上配置好的，如果本地要使用命令行也行，GUI能更直观地显示一些信息</p><p>这里以pgAdmin为例，点击server，选择Add New Server</p><img src="/2022/03/11/%E5%9C%A8CentOS%E4%B8%8A%E5%AE%89%E8%A3%85PostgreSQL%E5%B9%B6%E9%85%8D%E7%BD%AE%E6%89%A9%E5%B1%95/image-20220310232740019.png" class="" title="image-20220310232740019"><p>配置相关的信息</p><img src="/2022/03/11/%E5%9C%A8CentOS%E4%B8%8A%E5%AE%89%E8%A3%85PostgreSQL%E5%B9%B6%E9%85%8D%E7%BD%AE%E6%89%A9%E5%B1%95/image-20220310232839301.png" class="" title="image-20220310232839301"><img src="/2022/03/11/%E5%9C%A8CentOS%E4%B8%8A%E5%AE%89%E8%A3%85PostgreSQL%E5%B9%B6%E9%85%8D%E7%BD%AE%E6%89%A9%E5%B1%95/image-20220310233034668.png" class="" title="image-20220310233034668"><blockquote><p>如果不记得postgres的密码，可以参考下面的<a href="#%E7%94%A8%E6%88%B7%E7%AE%A1%E7%90%86">用户管理</a>，修改postgres的密码</p></blockquote><h3 id="用户管理"><a href="#用户管理" class="headerlink" title="用户管理"></a>用户管理</h3><h4 id="登录"><a href="#登录" class="headerlink" title="登录"></a>登录</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">psql -U postgres #用户名</span><br></pre></td></tr></table></figure><h4 id="显示用户信息"><a href="#显示用户信息" class="headerlink" title="显示用户信息"></a>显示用户信息</h4><p>use the <code>\du</code> to list all user accounts (or roles) in the current PostgreSQL database server</p><p>The <code>\du+ </code>command adds an additional column called <code>description</code>.</p><h4 id="更改密码"><a href="#更改密码" class="headerlink" title="更改密码"></a>更改密码</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">postgres=# alter role &quot;username&quot; WITH PASSWORD &#x27;*****&#x27;;</span><br><span class="line">ALTER ROLE</span><br><span class="line">postgres=# </span><br></pre></td></tr></table></figure><h4 id="添加用户"><a href="#添加用户" class="headerlink" title="添加用户"></a>添加用户</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">CREATE USER 用户名 WITH PASSWORD &#x27;*****&#x27;;</span><br><span class="line">CREATE role 用户名 WITH PASSWORD &#x27;*****&#x27;;</span><br></pre></td></tr></table></figure><p>使用<code>user</code>是带登录权限,<code>role</code>是不带登录权限</p><p>如果要授权登录</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">user</span> 用户名 <span class="keyword">with</span> login</span><br></pre></td></tr></table></figure><h4 id="授权"><a href="#授权" class="headerlink" title="授权"></a>授权</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">postgres<span class="operator">=</span># <span class="keyword">grant</span> <span class="keyword">all</span> privileges <span class="keyword">on</span> database 数据库名 <span class="keyword">to</span> 用户名;</span><br></pre></td></tr></table></figure><h2 id="几个常用的命令"><a href="#几个常用的命令" class="headerlink" title="几个常用的命令"></a>几个常用的命令</h2><p>启动、重启、状态</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">service postgresql-14 start</span><br><span class="line">service postgresql-14 restart</span><br><span class="line">service postgresql-14 status</span><br></pre></td></tr></table></figure><hr><h2 id="与MySQL对比"><a href="#与MySQL对比" class="headerlink" title="与MySQL对比"></a>与MySQL对比</h2><p>(1)列出所有的数据库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql: show databases</span><br><span class="line">psql: \l或\list</span><br></pre></td></tr></table></figure><p>(2)切换数据库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql: use dbname</span><br><span class="line">psql: \c dbname</span><br></pre></td></tr></table></figure><p>(3)列出当前数据库下的数据表</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql: show tables</span><br><span class="line">psql: \d</span><br></pre></td></tr></table></figure><p>(4)列出指定表的所有字段</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql: show columns from table name</span><br><span class="line">psql: \d tablename</span><br></pre></td></tr></table></figure><p>(5)查看指定表的基本情况</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql: describe tablename</span><br><span class="line">psql: \d+ tablename</span><br></pre></td></tr></table></figure><p>(6)退出登录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql: quit 或者\q</span><br><span class="line">psql:\q</span><br></pre></td></tr></table></figure><p>(7)查看pgsl版本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pg_ctl --version</span><br></pre></td></tr></table></figure><p>(8)命令行登陆数据库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">psql -h 192.168.2.125 -p 5432 &lt;dbname&gt; &lt;username&gt;</span><br></pre></td></tr></table></figure><p>(9)修改密码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">psql登陆</span><br><span class="line"></span><br><span class="line">然后， \password postgres</span><br></pre></td></tr></table></figure><p>参考：</p><blockquote><p><a href="https://www.cnblogs.com/woshimrf/p/centos-install-postgresql.html">CentOS7安装PostgreSQL - Ryan.Miao - 博客园 (cnblogs.com)</a></p></blockquote><h2 id="卸载"><a href="#卸载" class="headerlink" title="卸载"></a>卸载</h2><p>如果配置错了，或者版本选错了，想重新来过</p><p>You can also use <code>grep</code> in conjunction with YUM’s <code>list</code> command to return a list of all package instances of PostgreSQL:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum list installed | grep postgres</span><br></pre></td></tr></table></figure><p>Uninstall the PostgreSQL package using YUM remove</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum remove &#123;POSTGRESS-PACKAGE NAME&#125;</span><br></pre></td></tr></table></figure><p><a href="https://kb.objectrocket.com/postgresql/how-to-completely-uninstall-postgresql-757">How To Completely Uninstall PostgreSQL | ObjectRocket</a></p><h1 id="PostGIS"><a href="#PostGIS" class="headerlink" title="PostGIS"></a>PostGIS</h1><p>如果安装PostgreSQL是安装上面步骤，那么仅需执行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install postgis31_14</span><br></pre></td></tr></table></figure><p>31是postGIS的版本即3.1，14是对应的PostgreSql的版本（一定要对应，不然又会重新安装一个PostgreSql）</p><p>安装好的扩展会在<code>/usr/pgsql-14/share/extension</code>路径下</p><p>参考：</p><blockquote><p><a href="https://people.planetpostgresql.org/devrim/index.php?/archives/107-Installing-PostGIS-3.1-and-PostgreSQL-13-on-CentOS-8.html">Installing PostGIS 3.1 and PostgreSQL 13 on CentOS 8 | Devrim Gunduz’s PostgreSQL Blog (planetpostgresql.org)</a></p></blockquote><h1 id="pgRouting"><a href="#pgRouting" class="headerlink" title="pgRouting"></a>pgRouting</h1><p>基本与PostGIS相同，仅需执行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install pgrouting_14</span><br></pre></td></tr></table></figure><p>14对应PostgreSql的版本</p><blockquote><p>当然，可以编译源文件，<a href="https://github.com/pgRouting/pgrouting">pgRouting&#x2F;pgrouting: Repository contains pgRouting library. Development branch is “develop”, stable branch is “master” (github.com)</a></p></blockquote><h1 id="加载扩展（GUI）"><a href="#加载扩展（GUI）" class="headerlink" title="加载扩展（GUI）"></a>加载扩展（GUI）</h1><p>选择需要增加扩展的数据库，点击菜单栏Tools-&gt;Query Tool，出现Query窗口，输入</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> extension postgis;</span><br><span class="line"><span class="keyword">create</span> extension pgrouting;</span><br></pre></td></tr></table></figure><p>如果执行成功</p><img src="/2022/03/11/%E5%9C%A8CentOS%E4%B8%8A%E5%AE%89%E8%A3%85PostgreSQL%E5%B9%B6%E9%85%8D%E7%BD%AE%E6%89%A9%E5%B1%95/image-20220311010401874.png" class="" title="image-20220311010401874">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;PostgreSQL&quot;&gt;&lt;a href=&quot;#PostgreSQL&quot; class=&quot;headerlink&quot; title=&quot;PostgreSQL&quot;&gt;&lt;/a&gt;PostgreSQL&lt;/h1&gt;&lt;h2 id=&quot;选择安装版本&quot;&gt;&lt;a href=&quot;#选择安装版本&quot; class=&quot;</summary>
      
    
    
    
    
    <category term="python" scheme="https://oxyzchen.github.io/tags/python/"/>
    
    <category term="sql" scheme="https://oxyzchen.github.io/tags/sql/"/>
    
    <category term="GIS" scheme="https://oxyzchen.github.io/tags/GIS/"/>
    
  </entry>
  
  <entry>
    <title>win10安装wsl2并迁移到D盘</title>
    <link href="https://oxyzchen.github.io/2022/02/26/win10%E5%AE%89%E8%A3%85wsl2%E5%B9%B6%E8%BF%81%E7%A7%BB%E5%88%B0D%E7%9B%98/"/>
    <id>https://oxyzchen.github.io/2022/02/26/win10%E5%AE%89%E8%A3%85wsl2%E5%B9%B6%E8%BF%81%E7%A7%BB%E5%88%B0D%E7%9B%98/</id>
    <published>2022-02-26T15:47:55.000Z</published>
    <updated>2022-03-10T17:09:28.672Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一、准备"><a href="#一、准备" class="headerlink" title="一、准备"></a>一、准备</h1><p>当前系统版本 Windows 10 企业版 LTSC 21H2 （家庭版可能不一样）</p><p>启用Hyper-V、适用于Linux的Windows子系统</p><img src="/2022/02/26/win10%E5%AE%89%E8%A3%85wsl2%E5%B9%B6%E8%BF%81%E7%A7%BB%E5%88%B0D%E7%9B%98/image-20220226225020788.png" class="" title="image-20220226225020788"><img src="/2022/02/26/win10%E5%AE%89%E8%A3%85wsl2%E5%B9%B6%E8%BF%81%E7%A7%BB%E5%88%B0D%E7%9B%98/image-20220226225047580.png" class="" title="image-20220226225047580"><h1 id="二、安装"><a href="#二、安装" class="headerlink" title="二、安装"></a>二、安装</h1><p>将 WSL 2 设置为默认版本</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wsl <span class="literal">--set-default-version</span> <span class="number">2</span></span><br></pre></td></tr></table></figure><p>在Microsoft Store 安装，这里咱选的是Ubuntu18.04 LTS</p><img src="/2022/02/26/win10%E5%AE%89%E8%A3%85wsl2%E5%B9%B6%E8%BF%81%E7%A7%BB%E5%88%B0D%E7%9B%98/image-20220226225651118.png" class="" title="image-20220226225651118"><p>安装之后打开，设置用户名和密码</p><img src="/2022/02/26/win10%E5%AE%89%E8%A3%85wsl2%E5%B9%B6%E8%BF%81%E7%A7%BB%E5%88%B0D%E7%9B%98/image-20220226225743244.png" class="" title="image-20220226225743244"><p>使用PowerShell也能查看到</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wsl <span class="literal">--list</span> <span class="literal">--all</span> <span class="literal">-v</span></span><br></pre></td></tr></table></figure><img src="/2022/02/26/win10%E5%AE%89%E8%A3%85wsl2%E5%B9%B6%E8%BF%81%E7%A7%BB%E5%88%B0D%E7%9B%98/image-20220226230026932.png" class="" title="image-20220226230026932"><p>到这里wsl2基本安装好了</p><h1 id="三、迁移到D盘"><a href="#三、迁移到D盘" class="headerlink" title="三、迁移到D盘"></a>三、迁移到D盘</h1><p>应该有两种方法，一种是使用LxRunOffline</p><p>参考：<a href="https://learnku.com/articles/46234">记录 WSL 从 C 盘迁移至 D 盘 | Laravel China 社区 (learnku.com)</a></p><p>另一种是使用自带的wsl命令</p><p>参考：<a href="https://blog.csdn.net/w851685279/article/details/108904106?utm_medium=distribute.pc_aggpage_search_result.none-task-blog-2~aggregatepage~first_rank_ecpm_v1~rank_v31_ecpm-1-108904106.pc_agg_new_rank&utm_term=win10+%E5%B0%86wsl2+%E8%AE%BE%E7%BD%AE%E5%88%B0d%E7%9B%98&spm=1000.2123.3001.4430">win10 wsl2修改默认安装目录到其他盘_程序猿的博客-CSDN博客_wsl2 安装位置</a></p><p><a href="https://www.cnblogs.com/konghuanxi/p/14731846.html">WSL2安装Ubuntu20.04 - 老王的笔记 - 博客园 (cnblogs.com)</a></p><p>这里咱使用的是第二种</p><h2 id="确保wsl是关闭状态"><a href="#确保wsl是关闭状态" class="headerlink" title="确保wsl是关闭状态"></a>确保wsl是关闭状态</h2><img src="/2022/02/26/win10%E5%AE%89%E8%A3%85wsl2%E5%B9%B6%E8%BF%81%E7%A7%BB%E5%88%B0D%E7%9B%98/image-20220226232956596.png" class="" title="image-20220226232956596"><h2 id="导出分发版为tar文件到d盘"><a href="#导出分发版为tar文件到d盘" class="headerlink" title="导出分发版为tar文件到d盘"></a>导出分发版为tar文件到d盘</h2><p>命令：<code>wsl --export 虚拟机名称 文件导出路径</code></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wsl <span class="literal">--export</span> Ubuntu<span class="literal">-18</span>.<span class="number">04</span> D:\wsl\wsl<span class="literal">-ubuntu-18</span>.<span class="number">04</span>.tar</span><br></pre></td></tr></table></figure><h2 id="卸载虚拟机（删除C盘的虚拟机数据）"><a href="#卸载虚拟机（删除C盘的虚拟机数据）" class="headerlink" title="卸载虚拟机（删除C盘的虚拟机数据）"></a>卸载虚拟机（删除C盘的虚拟机数据）</h2><p>命令：wsl –unregister 虚拟机名称</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wsl --unregister Ubuntu-18.04</span><br></pre></td></tr></table></figure><img src="/2022/02/26/win10%E5%AE%89%E8%A3%85wsl2%E5%B9%B6%E8%BF%81%E7%A7%BB%E5%88%B0D%E7%9B%98/image-20220226233647889.png" class="" title="image-20220226233647889"><h2 id="导入新的虚拟机"><a href="#导入新的虚拟机" class="headerlink" title="导入新的虚拟机"></a>导入新的虚拟机</h2><p>目标路径：新的虚拟机文件路径（理解为软件的安装路径就对了，咱安装在D:\wsl\Ubuntu1804）</p><p>虚拟机文件路径：第3步导出的文件（D:\wsl\wsl-ubuntu-18.04.tar）</p><p>–version 2：指定使用WSL2，如果填1就是指定使用WSL</p><p>命令<code>wsl --import 虚拟机名称 目标路径 虚拟机文件路径 --version 2</code></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wsl <span class="literal">--import</span> Ubuntu<span class="literal">-18</span>.<span class="number">04</span> D:\wsl\Ubuntu1804 D:\wsl\wsl<span class="literal">-ubuntu-18</span>.<span class="number">04</span>.tar <span class="literal">--version</span> <span class="number">2</span></span><br></pre></td></tr></table></figure><p>导出后可以看到wsl以硬盘镜像文件在D盘指定的文件夹下</p><img src="/2022/02/26/win10%E5%AE%89%E8%A3%85wsl2%E5%B9%B6%E8%BF%81%E7%A7%BB%E5%88%B0D%E7%9B%98/image-20220226234209201.png" class="" title="image-20220226234209201"><p>接下来就可以正常使用了</p><h1 id="可能遇到的问题"><a href="#可能遇到的问题" class="headerlink" title="可能遇到的问题"></a>可能遇到的问题</h1><h2 id="错误代码0x800701bc"><a href="#错误代码0x800701bc" class="headerlink" title="错误代码0x800701bc"></a>错误代码0x800701bc</h2><p>Installing, this may take a few minutes…<br> WslRegisterDistribution failed with error: 0x800701bc<br> Error: 0x800701bc WSL 2 ?????????????????? <a href="https://aka.ms/wsl2kernel">https://aka.ms/wsl2kernel</a></p><p>解决：使用<strong>管理员</strong>权限运行powershell，并输入<code>wsl --update</code>   执行</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;一、准备&quot;&gt;&lt;a href=&quot;#一、准备&quot; class=&quot;headerlink&quot; title=&quot;一、准备&quot;&gt;&lt;/a&gt;一、准备&lt;/h1&gt;&lt;p&gt;当前系统版本 Windows 10 企业版 LTSC 21H2 （家庭版可能不一样）&lt;/p&gt;
&lt;p&gt;启用Hyper-V、适用</summary>
      
    
    
    
    
    <category term="wsl" scheme="https://oxyzchen.github.io/tags/wsl/"/>
    
  </entry>
  
  <entry>
    <title>建站日志</title>
    <link href="https://oxyzchen.github.io/2022/02/13/%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/"/>
    <id>https://oxyzchen.github.io/2022/02/13/%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/</id>
    <published>2022-02-13T14:46:42.000Z</published>
    <updated>2022-02-14T03:23:56.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一、为什么用Hexo"><a href="#一、为什么用Hexo" class="headerlink" title="一、为什么用Hexo"></a>一、为什么用Hexo</h1><p>咱已经在自己注册的网站上用WordPress搭建了一个博客（虽然一篇博文都还没写），它有完善的后台，安装也挺简单的，评论会也有邮件提醒。但考虑到之前注册的域名和购买的主机都只有一年时间，后面终究要迁移的，用Hexo可以在GitHub上托管，支持Markdown，咱就本地用Typora写写日志，然后上传到网上记录下，也是可以的。</p><h1 id="二、搭建过程"><a href="#二、搭建过程" class="headerlink" title="二、搭建过程"></a>二、搭建过程</h1><p>网上的教程挺多的，稍微搜索下基本都能实现，<a href="https://hexo.io/zh-cn/docs/">官方的文档</a>挺详细的，也有中文翻译。</p><p>Hexo对Node.js的版本有要求，在安装相应版本的Node.js后，命令行就那么几条就能建站了</p><p><strong>全局安装Hexo-cli</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p><strong>使用Hexo-cli初始化项目</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init &lt;folder&gt;</span><br></pre></td></tr></table></figure><p>然后cd到目录</p><p>常用的命令(直接命令行hexo就出来了)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Commands:</span><br><span class="line">  clean     Remove generated files and cache.</span><br><span class="line">  config    Get or <span class="built_in">set</span> configurations.</span><br><span class="line">  deploy    Deploy your website.</span><br><span class="line">  generate  Generate static files.</span><br><span class="line">  <span class="built_in">help</span>      Get <span class="built_in">help</span> on a <span class="built_in">command</span>.</span><br><span class="line">  init      Create a new Hexo folder.</span><br><span class="line">  list      List the information of the site</span><br><span class="line">  migrate   Migrate your site from other system to Hexo.</span><br><span class="line">  new       Create a new post.</span><br><span class="line">  publish   Moves a draft post from _drafts to _posts folder.</span><br><span class="line">  render    Render files with renderer plugins.</span><br><span class="line">  server    Start the server.</span><br><span class="line">  version   Display version information.</span><br></pre></td></tr></table></figure><p>有对应的缩写</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo server —&gt; hexo s</span><br><span class="line">hexo deploy -&gt; hexo d</span><br><span class="line">hexo generate -&gt; hexo g</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p> <strong>发布文章的过程应该是这样的：</strong></p><ol><li><p>生成相应的md文件，包含Front-matter 用来配置发布文章时显示的一些信息，列如标题、发布日期、类别、标签</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new <span class="string">&#x27;文章名&#x27;</span> </span><br></pre></td></tr></table></figure></li><li><p>在md上写文章</p></li><li><p>生成静态文件并在本地服务器上预览   </p>   <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">heox g &amp;&amp; hexo s</span><br></pre></td></tr></table></figure></li><li><p>发布到Github仓库上</p>   <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure></li></ol><p>此外Hexo也支持草稿，写在草稿的内容不会在生成的网页上显示，需要publish后才能行。</p><h1 id="三、个性化配置"><a href="#三、个性化配置" class="headerlink" title="三、个性化配置"></a>三、个性化配置</h1><h2 id="1-主题"><a href="#1-主题" class="headerlink" title="1.主题"></a>1.主题</h2><p>其实官方提供的landscape主题也挺不错的，咱只是觉得没有夜间皮肤，所以换了一个<a href="https://butterfly.js.org/">Butterfly</a>。</p><p>初始化的适合没有顶部的菜单栏，以为咱配置错了，在观看了别人的配置视频安心了，原来默认的都配置（主题目录下的_config.yml） 文件中都是被注释的,取消注释就行了。并且官方的安装教程也很详细，还是支持中文。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#在项目路径下安装主题</span><br><span class="line">git clone -b master https://github.com/jerryc127/hexo-theme-butterfly.git themes/butterfly </span><br><span class="line">#报错就执行</span><br><span class="line">npm install hexo-renderer-pug hexo-renderer-stylus --save</span><br></pre></td></tr></table></figure><p>文档都挺详细的，照配置文件，关闭了首页的大图，以及一些不必要的图片以提升加载速度，替换了链接、文字、头像。然后就是这个颜色，在项目路径\themes\butterfly\source\css\var.styl 这个文件开头几行</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$bright</span>-blue = <span class="number">#ff7700</span></span><br><span class="line"><span class="variable">$strong</span>-cyan = <span class="number">#ff7700</span></span><br><span class="line"><span class="variable">$light</span>-orange = <span class="number">#49B1F5</span></span><br><span class="line"><span class="variable">$light</span>-red = <span class="number">#F47466</span></span><br></pre></td></tr></table></figure><p>改成这样，主体界面的颜色就是橙色了</p><h2 id="2-扩展功能"><a href="#2-扩展功能" class="headerlink" title="2.扩展功能"></a>2.扩展功能</h2><p><strong>rss订阅功能</strong>，需要安装插件，主要参考<a href="https://lilu.org.cn/2021/01/31/butterfly/">这篇博文</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-feed --save</span><br></pre></td></tr></table></figure><p>在项目路径的配置文件_config.yml中添加以下代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">plugin:</span><br><span class="line">  - hexo-generator-feed</span><br><span class="line"># Feed Atom</span><br><span class="line">feed:</span><br><span class="line">  type: atom</span><br><span class="line">  path: atom.xml</span><br><span class="line">  limit: 20</span><br></pre></td></tr></table></figure><p>在主题的配置文件_config.yml中的social属性下添加rss的icon配置：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">social:</span><br><span class="line">  fa fa-rss: /atom.xml</span><br></pre></td></tr></table></figure><p>最后直接复制，手打的话要注意”:”后要加一个空格（可能是yaml的语法），不然会报错</p><h1 id="四、遇到的一些问题"><a href="#四、遇到的一些问题" class="headerlink" title="四、遇到的一些问题"></a>四、遇到的一些问题</h1><h2 id="1-插入图片"><a href="#1-插入图片" class="headerlink" title="1.插入图片"></a>1.插入图片</h2><p>咱写博文的目的就是记录，主要是给自己看的（估计也没有什么访客），前面提到的写作流程是现在本地写好，然后再发布。咱有些内容不太想公开，那本地也要存档，只有文本的Markdown挺好办的，就单个文件，直接复制走就行。但是对于有图片的需要配置下项目的配置文件_config.yml和Typora。</p><p><strong>对于_config.yml</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">post_asset_folder: true</span><br><span class="line">marked:</span><br><span class="line">  prependRoot: true</span><br><span class="line">  postAsset: true</span><br></pre></td></tr></table></figure><p>这样就能在new 文章的时候生成相应的目录</p><p>在偏好设置-&gt;图像-&gt;插入图片时，选择复制到制定路径,如下图所示，勾选优先使用相对路径，然后就能保存在hexo new ‘文章名’ 自动生成的相应文件夹下了。</p><p><strong>对于Typora</strong></p><img src="/2022/02/13/%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/image-20220214000410110.png" class="" title="image-20220214000410110"><p>但是在generate之后，图片在文章的html同级目录下，不是在同级目录下的 &#x2F;文章名&#x2F; 文件夹中，和Markdown的路径并不一样，<a href="https://stackoverflow.com/questions/30861278/hexo-change-folder-structure-when-generate-static-files">Stackoverflow</a>能找到类似的问题，官方给出的解决方法是用另一种写法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% asset_img example.jpg This is an example image %&#125;</span><br></pre></td></tr></table></figure><p>可是咱用Typora直接把截图的图片扔进来，它可不长这样，然道咱还要一个个改吗？</p><p>幸好有插件可以解决</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-image-link --save</span><br></pre></td></tr></table></figure><h2 id="2-部署"><a href="#2-部署" class="headerlink" title="2.部署"></a>2.部署</h2><p>官方文档给的</p><p><strong>私有 Repository</strong></p><ol><li>安装 <a href="https://github.com/hexojs/hexo-deployer-git">hexo-deployer-git</a>。<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure></li><li>修改配置。<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: &lt;repository url&gt; #https://bitbucket.org/JohnSmith/johnsmith.bitbucket.io</span><br><span class="line">  branch: [branch]</span><br><span class="line">  message: [message]</span><br></pre></td></tr></table></figure></li><li>运行 <code>hexo clean &amp;&amp; hexo deploy</code> 。</li><li>查看 <em>username</em>.github.io 上的网页是否部署成功。</li></ol><p>为什么是私有？因为字少，公开的有足足11条咱懒得看了，但是最初还是吃了亏。</p><p>首先是git连接仓库，怎么都连不上，不是网络的问题，一层层使尝，发现window的ssh-agent是默认没有在运行的</p><p><code>unable to start ssh-agent service, error :1058</code></p><p>需要以管理员身份运行PowerShell</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Set-Service -Name ssh-agent -StartupType automatic</span><br></pre></td></tr></table></figure><p>自动运行ssh-agent</p><p>可是在成功部署之后GitHub仓库上也有相应文件上传，访问GitHub Pages，依旧404</p><p>在查看仓库的设置界面</p><img src="/2022/02/13/%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/image-20220214003740915.png" class="" title="image-20220214003740915"><p>原来私有仓库的GitHub Pages 是要会员的，需要弄成公开参考才能访问。</p><h1 id="五、其他的一些事项"><a href="#五、其他的一些事项" class="headerlink" title="五、其他的一些事项"></a>五、其他的一些事项</h1><h2 id="1-公式"><a href="#1-公式" class="headerlink" title="1.公式"></a>1.公式</h2><p>需要显示Markdown公式的时候要在Front-matter 加上 mathjax: true，Markdown公式转换成HTML界面显示似乎要加载额外的js，需要给hexo说明是否加载，这个在主题的配置文件有提示。</p><h2 id="2-页面（page）"><a href="#2-页面（page）" class="headerlink" title="2.页面（page）"></a>2.页面（page）</h2><p>生成新的界面可以使用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page “界面名称”</span><br></pre></td></tr></table></figure><p>但是对于像标签、类别等界面，在没写文章是都是空的，访问会显示404，需要hexo new 文章有对应标签、类别之后才会显示内容，如果在没提交就new一个page，会生成一个md，<del>之后只会显示这个md文件上的内容 。至于其他界面比如友链、关于界面咱还没试过。</del>在md文件的Front-Matter 加上type: tags 就是标签页了，About好像就是一个静态的自定界面。</p><h2 id="3-代码块"><a href="#3-代码块" class="headerlink" title="3.代码块"></a>3.代码块</h2><p>代码块的段落最好要换行，不然会这样</p><img src="/2022/02/13/%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/image-20220214111734804.png" class="" title="image-20220214111734804">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;一、为什么用Hexo&quot;&gt;&lt;a href=&quot;#一、为什么用Hexo&quot; class=&quot;headerlink&quot; title=&quot;一、为什么用Hexo&quot;&gt;&lt;/a&gt;一、为什么用Hexo&lt;/h1&gt;&lt;p&gt;咱已经在自己注册的网站上用WordPress搭建了一个博客（虽然一篇博文都还</summary>
      
    
    
    
    <category term="tech" scheme="https://oxyzchen.github.io/categories/tech/"/>
    
    
    <category term="Hexo" scheme="https://oxyzchen.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://oxyzchen.github.io/2022/02/13/hello-world/"/>
    <id>https://oxyzchen.github.io/2022/02/13/hello-world/</id>
    <published>2022-02-13T09:01:45.592Z</published>
    <updated>2022-02-13T09:01:45.592Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
